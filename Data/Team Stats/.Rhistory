geom_line(aes(y=line1),size=1.6) + geom_line(aes(y=line2),size=1.6) + theme_bw() +
theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
theme(panel.grid.major=element_line(colour="#D0D0D0", size=.75)) +
scale_x_continuous(minor_breaks=0,breaks=seq(0,100,10),limits=c(0,100)) +
scale_y_continuous(minor_breaks=0,breaks=seq(0,26,4),limits=c(0,25)) +
theme(axis.ticks=element_blank()) +
theme(legend.position="none") +
ggtitle("Some Random Data I Made") +
theme(plot.title=element_text(face="bold",hjust=-.08,vjust=2,colour="#3C3C3C", size=20)) +
ylab("Data Label") +
xlab("Days Since Beginning") +
theme(axis.text.x=element_text(size=11, colour="#535353", face="bold")) +
theme(axis.text.y=element_text(size=11, colour="#535353", face="bold", vjust=1.5)) +
theme(axis.text.x=element_text(size=11, colour="#535353", face="bold", vjust=-.5)) +
geom_hline(yintercept=0,size=1.2,colour="#535353") +
theme(plot.margin = unit(c(1, 1, .5, .7), "cm")) +
annotate("text", x=14.7,y=15.3,label="Line 1", colour="#f8766d") +
annotate("text", x=25,y=7.5,label="Line 2", colour="#00bdc4")
library(ggplot2)
library(grid)
line1<-rnorm(100,mean=15-seq(1,6,by=.05),sd=1)
line2<-rnorm(100,mean=4+seq(1,21,by=.2),sd=.5)
time<-seq(1,100,by=1)
data<-data.frame(time,line1,line2)
ggplot(data,aes(time)) +
geom_line(aes(y=line1),size=1.6) + geom_line(aes(y=line2),size=1.6) + theme_bw() +
theme(panel.background=element_rect(fill="#F0F0F0")) +
theme(plot.background=element_rect(fill="#F0F0F0")) +
theme(panel.border=element_rect(colour="#F0F0F0")) +
theme(panel.grid.major=element_line(colour="#D0D0D0", size=.75)) +
scale_x_continuous(minor_breaks=0,breaks=seq(0,100,10),limits=c(0,100)) +
scale_y_continuous(minor_breaks=0,breaks=seq(0,26,4),limits=c(0,25)) +
theme(axis.ticks=element_blank()) +
theme(legend.position="none") +
ggtitle("Some Random Data I Made") +
theme(plot.title=element_text(face="bold",hjust=-.08,vjust=2,colour="#3C3C3C", size=20)) +
ylab("Data Label") +
xlab("Days Since Beginning") +
theme(axis.text.x=element_text(size=11, colour="#535353", face="bold")) +
theme(axis.text.y=element_text(size=11, colour="#535353", face="bold", vjust=1.5)) +
theme(axis.text.x=element_text(size=11, colour="#535353", face="bold", vjust=-.5)) +
geom_hline(yintercept=0,size=1.2,colour="#535353") +
theme(plot.margin = unit(c(1, 1, .5, .7), "cm")) +
annotate("text", x=14.7,y=15.3,label="Line 1", colour="#f8766d") +
annotate("text", x=25,y=7.5,label="Line 2", colour="#00bdc4")
toplocations <- arrange(ByLocation, desc(totrev))
library(ggplot2)
library(dplyr)
library(ggmap)
library(maps)
Park1 <- read.csv("Parking_Tags_Data_2014_1.csv")
setwd("C:/Users/My Files/Desktop/Data Science Resources/Toronto Data/parking_tickets_2014")
Park1 <- read.csv("Parking_Tags_Data_2014_1.csv")
Park2 <- read.csv("Parking_Tags_Data_2014_2.csv")
Park2$infraction_code <- as.factor(Park2$infraction_code)
Park2$date_of_infraction <- as.factor(Park2$date_of_infraction)
Park2$time_of_infraction <- as.factor(Park2$time_of_infraction)
Park3 <- read.csv("Parking_Tags_Data_2014_3.csv")
Park3$infraction_code <- as.factor(Park3$infraction_code)
Park3$date_of_infraction <- as.factor(Park3$date_of_infraction)
Park3$time_of_infraction <- as.factor(Park3$time_of_infraction)
Park4 <- read.csv("Parking_Tags_Data_2014_4.csv")
Park4$infraction_code <- as.factor(Park4$infraction_code)
Park4$date_of_infraction <- as.factor(Park4$date_of_infraction)
Park4$time_of_infraction <- as.factor(Park4$time_of_infraction)
FullPark <- rbind(Park1, Park2, Park3, Park4)
ByLocation <- summarise(by_loc,
count = n(),
fin = mean(set_fine_amount),
totrev = count*fin)
by_loc <- group_by(FullPark, location2)
ByLocation <- summarise(by_loc,
count = n(),
fin = mean(set_fine_amount),
totrev = count*fin)
toplocations <- arrange(ByLocation, desc(totrev))
toplocations <- slice(toplocations, 1:3)
data <- as.character(toplocations$location2)
addresses <- paste0(data, ", Toronto, ON")
geodata <- geocode(addresses)
summary(geodata)
geodata
toplocations <- arrange(ByLocation, desc(totrev))
toplocations <- slice(toplocations, 1:2000)
data <- as.character(toplocations$location2)
addresses <- paste0(data, ", Toronto, ON")
geodata <- geocode(addresses)
summary(geodata)
geodata
summary(geodata)
mymap <- qmap(location = c(lon = mygeocode$lon, lat=mygeocode$lat), zoom=11, maptype="roadmap", crop=TRUE)
mygeocode <- geocode("50 East Liberty St, Toronto, ON")
mymap <- qmap(location = c(lon = mygeocode$lon, lat=mygeocode$lat), zoom=11, maptype="roadmap", crop=TRUE)
ggmap(mymap) + geom_point(aes(x=lon, y=lat), data=geodata, alpha=.5, color="darkred", size=1)
?get_map
get_map(location="Toronto", maptype="roadmap", zoom=11, color="bw")
get_map(location="Toronto", maptype="roadmap", zoom=8, color="bw")
get_map(location="Toronto", maptype="roadmap", zoom=8)
get_map(location="New York", maptype="roadmap", zoom=8)
get_map(location="New York", maptype="roadmap", zoom=2)
get_map(location="New York", source="stamen", maptype="toner")
get_map(location="Omaha", source="stamen", maptype="toner")
summary(geodata)
summary(toplocations)
summary(geodata)
geodata
summary(geodata)
fulldata <- mutate(geodata, toplocations$totrev)
fulldata
summary(fulldata)
fulldata <- rename(fulldata, tot_rev = toplocations$totrev)
fulldata <- rename(fulldata, "tot_rev" = "toplocations$totrev")
fulldata <- rename(fulldata, toplocations$totrev = totalrev)
fulldata <- rename(fulldata, totalrev = toplocations$totrev)
fulldata <- mutate(geodata, totrev)
fulldata <- rename(fulldata, totalrev = toplocations$totrev)
fulldata <- rename(fulldata, toplocations$totrev = totalrev)
fulldata <- rename(fulldata, toplocations$totrev == totalrev)
fulldata <- rename(fulldata, toplocations$totrev = totalrev)
fulldata <- rename(fulldata, toplocations$totrev = "totalrev")
fulldata <- rename(fulldata, "toplocations$totrev" = "totalrev")
fulldata <- rename(fulldata, totalrev = toplocations$totrev)
fulldata <- rename(fulldata, total.rev = toplocations$totrev)
fulldata <- rename(fulldata, total.rev = toplocations$totrev)
fulldata <- mutate(geodata, toplocations$totrev=totalrev)
fulldata <- mutate(geodata, toplocations$totrev)
fulldata <- rename(fulldata, total.rev = toplocations$totrev)
library(plyr)
library(dplyr)
fulldata <- fulldata %>% rename(c("totalrev" = "toplocations$totrev"))
fulldata <- fulldata %>% rename(c("toplocations$totrev"="totalrev"))
summary(fulldata)
mygeocode <- geocode("50 East Liberty St, Toronto, ON")
mymap <- qmap(location = c(lon = mygeocode$lon, lat=mygeocode$lat), zoom=11, maptype="roadmap", crop=TRUE)
mymap
ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=totrev), data=fulldata, alpha=.5, color="darkred", size=1)
tmaps <- get_map(location=c(43.59, -79.63, 43.83, -79.16), source="osm")
mygeocode <- geocode("Toronto, ON")
mymap <- qmap(location = c(lon = mygeocode$lon, lat=mygeocode$lat), zoom=11, maptype="roadmap", crop=TRUE)
mymap
ggmap(mymap) + geom_point(aes(x=lon, y=lat), data=fulldata, alpha=.5, color="darkred", size=1)
mymap <- qmap(location = c(lon = fulldata$lon, lat=fulldata$lat), zoom=11, maptype="roadmap", crop=TRUE)
?get_map
ggmap(mymap) + geom_point(aes(x=lon, y=lat), data=fulldata, alpha=.5, color="darkred", size=1)
mymap <- qmap(location = c(lon = mygeocode$lon, lat=mygeocode$lat), zoom=11, maptype="roadmap", crop=TRUE)
mymap
get_map(location="texas", zoom=6, source="stamen")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totrev)), data=fulldata, alpha=.5)
tmaps <- get_map(location=c(43.59, -79.63, 43.83, -79.16), source="osm")
mymap <- get_map(location="Toronto", zoom=8)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totrev)), data=fulldata, alpha=.5)
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=.5)
mapPoints
mymap <- get_map(location="Toronto", zoom=15)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=.5)
mapPoints
mymap <- get_map(location="Toronto", zoom=12)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=.5)
mapPoints
mymap <- get_map(location="Toronto", zoom=11)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=.5)
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)) + scale_area(name = "Total Revenue"), data=fulldata, alpha=.5)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)) + scale_size_area(name = "Total Revenue"), data=fulldata, alpha=.5)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)) + scale_area(name = "Total Revenue"), data=fulldata, alpha=.5)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=.5)
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=.75)
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=1)
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=1, color="red")
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)), data=fulldata, alpha=1, color="blue")
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)),
data=fulldata, alpha=1, color="blue")
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)),
scale_color_gradientn(colors= rainbow_hcl(7))
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_color_gradientn(colors= rainbow_hcl(7)),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradientn(colours= rainbow_hcl(7)),
data=fulldata, alpha=1, color="blue")
library(colorspace)
library(RColorBrewer)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradientn(colours=rainbow_hcl(7)),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradientn(colours=rainbow_hcl()),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradientn(colours=rainbow_hcl(6)),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradientn(colours=rainbow_hcl(T)),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradientn(colours=rainbow_hcl(3)),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradient(colours=rainbow_hcl(7)),
data=fulldata, alpha=1, color="blue")
mapPoints
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradient(colours=rainbow_hcl),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
scale_colour_gradient(colours=rainbow_hcl(7)),
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+ scale_colour_gradient(colours=rainbow_hcl(7)),
data=fulldata, alpha=1, color="blue")
mymap <- get_map(location="Toronto", zoom=19)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev))+
data=fulldata, alpha=1, color="blue")
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)),
data=fulldata, alpha=1, color="blue")
mapPoints
mymap <- get_map(location="Toronto", zoom=17)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)),
data=fulldata, alpha=1, color="blue")
mapPoints
mymap <- get_map(location="Toronto", zoom=13)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)),
data=fulldata, alpha=1, color="blue")
mapPoints
mymap <- get_map(location="Toronto", zoom=15)
mapPoints <- ggmap(mymap) + geom_point(aes(x=lon, y=lat, size=sqrt(totalrev)),
data=fulldata, alpha=1, color="blue")
mapPoints
setwd("C:/Users/My Files/Desktop/Data Science Resources/Toronto Data/Permits")
library(ggplot2)
library(dplyr)
ActivePermits = read.csv("activepermits.csv")
summary(ActivePermits)
ClearedPermits2015 = read.csv("clearedpermits2015.csv")
summary(ClearedPermits2015)
Clear2014 <- read.csv("clearedpermits2014.csv")
summary(Clear2014)
summary(Clear2015)
Clear2015 = read.csv("clearedpermits2015.csv")
summary(Clear2015)
Clear2013 = read.csv("clearedpermits2013.csv")
summary(Clear2013)
Clear2013$PERMIT_TYPE
install.packages("RcappeR")
setwd("C:/Users/My Files/Desktop/Data Science Resources/NHL/NHL/Data/Team Stats")
data <- read.csv("AllEncompassing.csv")
data <- read.csv("AllEncompassing.csv")
data <- mutate(data, home=1)
data
summary(data)
data1 <- read.csv("GoalieBySeason.csv")
data2 <- read.csv("CareerGoalie.csv")
summary(data2)
summary(data1)
data1 <- rename(data1, Sv.=Save_Percentage)
data1 <- rename(data1, Save_Percentage=Sv.)
library(dplyr)
data1 <- rename(data1, Save_Percentage=Sv.)
data1 <- rename(data1, SavePercentage=Sv.)
data1 <- rename(data1, Sv.=SavePercentage)
data1 <- data1 %>% rename(Sv.=SavePercentage)
data1$Sv.
summary(data)
data <- rename(data, HIT=Hit Count)
data <- rename(data, HIT=Hit_Count)
data <- rename(data, "HIT"="Hit_Count")
rename(data, Hit_count=HIT)
dplyr::rename(data, Hit_count=HIT)
summary(data)
dplyr::rename(data, Hit_count=HIT)
library(dplyr)
library(e1071)
data <- read.csv("AllEncompassing.csv")
data1 <- read.csv("GoalieBySeason.csv")
data2 <- read.csv("CareerGoalie.csv")
rename(data, Hit_count=HIT)
AllEn <- read.csv("AllEncompassing.csv")
rename(AllEn, Hit_count=HIT)
library(dplyr)
data <- read.csv("AllEncompassing.csv")
data1 <- read.csv("GoalieBySeason.csv")
data2 <- read.csv("CareerGoalie.csv")
#Rename columns
rename(data, Hit_count=HIT)
dplyr::rename(data, Hit_count=HIT)
summary(data)
dplyr::rename(data, Hit_count=HIT, GoalDiff=G...)
data <- dplyr::rename(data, Hit_count=HIT, GoalDiff=G...)
summary(data)
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC...)
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC...)
data <- read.csv("AllEncompassing.csv")
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC...)
data <- read.csv("AllEncompassing.csv")
summary(data)
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC...)
summary(data)
data <- read.csv("AllEncompassing.csv")
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC....
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
Shots_For_Perc=SF., Shots_Diff=S..., Goals_For_Perc=GF., Unblocked_Shooting_Perc=OFenSh.,
Attempts_on_Goal=OCOn., Hits_Taken=HIT., Penalties=PN, Penalties_Drawn=PN., Pen_Diff=PenD)
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC....
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC....,
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
Shots_For_Perc=SF., Shots_Diff=S..., Goals_For_Perc=GF., Unblocked_Shooting_Perc=OFenSh.,
Attempts_on_Goal=OCOn., Hits_Taken=HIT., Penalties=PN, Penalties_Drawn=PN., Pen_Diff=PenD)
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC...,
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
Shots_For_Perc=SF., Shots_Diff=S..., Goals_For_Perc=GF., Unblocked_Shooting_Perc=OFenSh.,
Attempts_on_Goal=OCOn., Hits_Taken=HIT., Penalties=PN, Penalties_Drawn=PN., Pen_Diff=PenD)
summary(data)
data <- select(data, -(OFOn..1, FO..1, OSv..1, OSh..1, CP60.1, CF..1))
data <- select(data, -OFOn..1, FO..1, OSv..1, OSh..1, CP60.1, CF..1))
data <- select(data, -OFOn..1, FO..1, OSv..1, OSh..1, CP60.1, CF..1)
summary(data)
data <- select(data, -(OFOn..1, FO..1, OSv..1, OSh..1, CP60.1, CF..1))
data <- select(data, -OFOn..1, -FO..1, -OSv..1, -OSh..1, -CP60.1, -CF..1)
data <- read.csv("AllEncompassing.csv")
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC...,
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
Shots_For_Perc=SF., Shots_Diff=S..., Goals_For_Perc=GF., Unblocked_Shooting_Perc=OFenSh.,
Attempts_on_Goal=OCOn., Hits_Taken=HIT., Penalties=PN, Penalties_Drawn=PN., Pen_Diff=PenD)
data <- select(data, -OFOn..1, -FO..1, -OSv..1, -OSh..1, -CP60.1, -CF..1)
summary(data)
data <- read.csv("AllEncompassing.csv")
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC..., Corsi_Diff=C...,
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
Shots_For_Perc=SF., Shots_Diff=S..., Goals_For_Perc=GF., Unblocked_Shooting_Perc=OFenSh.,
Attempts_on_Goal=OCOn., Hits_Taken=HIT., Penalties=PN, Penalties_Drawn=PN., Pen_Diff=PenD)
data <- select(data, -OFOn..1, -FO..1, -OSv..1, -OSh..1, -CP60.1, -CF..1)
summary(data)
data %>% filter(High_Scoring_Chance_Diff > 71)
data %>% filter(Team, High_Scoring_Chance_Diff > 71)
data %>% filter(High_Scoring_Chance_Diff > 71) %>% select(Team, High_Scoring_Chance_Diff)
summary(data)
data %>% filter(High_Scoring_Chance_Diff > 71) %>% select(Team, season , GDiff, Scoring_Chances_Diff, Corsi_DiffHigh_Scoring_Chance_Diff)
data %>% filter(High_Scoring_Chance_Diff > 71) %>% select(Team, season , GDiff, Scoring_Chances_Diff, Corsi_Diff,High_Scoring_Chance_Diff)
library(dplyr)
library(e1071)
data <- read.csv("AllEncompassing.csv")
data1 <- read.csv("GoalieBySeason.csv")
data2 <- read.csv("CareerGoalie.csv")
#Rename columns
data <- dplyr::rename(data, Hits=HIT, GDiff=G..., Corsi_For_Perc=CF., Corsi_60=CP60, Unblocked_Shots_Perc=OFOn.,
Shooting_Perc=OSh., Save_Perc=OSv., Faceoff_Win_Perc=FO., Zone_Starts_Per=ZSO., High_Danger_Scoring=HSCF.,
High_Scoring_Chance_Diff=HSC..., Scoring_Chances_Perc=SCF., Scoring_Chances_Diff=SC..., Corsi_Diff=C...,
Fenwick_For_Perc=FF., Fenwick_Diff=F..., Missed_Shots_For=MSF, Missed_Shots_Against=MSA,
Shots_For_Perc=SF., Shots_Diff=S..., Goals_For_Perc=GF., Unblocked_Shooting_Perc=OFenSh.,
Attempts_on_Goal=OCOn., Hits_Taken=HIT., Penalties=PN, Penalties_Drawn=PN., Pen_Diff=PenD)
data <- select(data, -OFOn..1, -FO..1, -OSv..1, -OSh..1, -CP60.1, -CF..1)
#Data Exp
data %>% filter(High_Scoring_Chance_Diff > 71) %>% select(Team, season , GDiff, Scoring_Chances_Diff, Corsi_Diff,High_Scoring_Chance_Diff)
summary(data)
summary(data)
summary(data1)
data1 <- dplyr::rename(data1, SV_Perc=Sv., Adjusted_SV_Perc=AdSv., SV_Perc_Low=Sv.L, SV_Perc_Mid=Sv.M, SV_Perc_High=Sv.H,
Goals_Low=G.L, Saves_Low=S.L, Goals_Med=G.M, Saves_Med=S.M, Goals_High=G.H, Saves_High=S.H)
#Data Exp
summary(data1)
summary(data2)
data2 <- dplyr::rename(data2, SV_Perc=Sv., Adjusted_SV_Perc=AdSv., SV_Perc_Low=Sv.L, SV_Perc_Mid=Sv.M, SV_Perc_High=Sv.H,
Goals_Low=G.L, Saves_Low=S.L, Goals_Med=G.M, Saves_Med=S.M, Goals_High=G.H, Saves_High=S.H)
summary(data2)
summary(data1)
summary(data2)
GoalData <- merge(data1, data2, on="Name", how="outer")
summary(GoalData)
GoalData <- join(data1, data2, on="Name", how="outer")
GoalData <- merge(data1, data2, on="Name", how="outer")
GoalData <- merge(data1, data2, on="Name", how="inner")
summary(GoalData)
summary(data1)
data1 %>% filter(SV_Perc_High > 81.57) %>% filter(Sh > 1000)
summary(data1)
data1 %>% filter(Adjusted_SV_Perc > 92) %>% filter(Sh > 1000) %>% select(Name, Team, season, Adjusted_SV_Perc, Sh)
data2 %>% filter(Adjusted_SV_Perc > 92) %>% filter(Sh > 1000) %>% select(Name, Adjusted_SV_Perc, Sh)
totalGoalie <- merge(data1, data2, by="Name")
summary(totalGoalie)
totalGoalie
summary(totalGoalie)
totalGoalie <- mutage(totalGoalie, Delta_SV_Perc = Adjusted_SV_Perc - Adjusted_SV_Perc.y)
totalGoalie <- mutate(totalGoalie, Delta_SV_Perc = Adjusted_SV_Perc - Adjusted_SV_Perc.y)
totalGoalie <- mutate(totalGoalie, Delta_SV_Perc = Adjusted_SV_Perc.x - Adjusted_SV_Perc.y)
summary(totalGoalie)
totalGoalie <- merge(data1, data2, by="inner")
totalGoalie <- merge(data1, data2, by="Name", how="inner")
summary(totalGoalie)
totalGoalie <- merge(data1, data2, by="Name", how="left")
summary(totalGoalie)
totalGoalie <- merge(data1, data2, by="Name")
totalGoalie <- mutate(totalGoalie, Delta_SV_Perc = Adjusted_SV_Perc.x - Adjusted_SV_Perc.y)
Delta_Low_SV_Perc = SV_Perc_Low.x - SV_Perc_Low.y)
totalGoalie <- mutate(totalGoalie, Delta_SV_Perc = Adjusted_SV_Perc.x - Adjusted_SV_Perc.y,
Delta_High_SV_Perc = SV_Perc_High.x - SV_Perc_High.y,
Delta_Mid_SV_Perc = SV_Perc_Mid.x - SV_Perc_Mid.y,
Delta_Low_SV_Perc = SV_Perc_Low.x - SV_Perc_Low.y)
summary(totalGoalie)
data
summary(data)
train = CreateDataParition(AllEncompass, p=.75, list=FALSE, time=1)
library(caret)
train = CreateDataParition(AllEncompass, p=.75, list=FALSE, time=1)
train = CreateDataPartition(AllEncompass, p=.75, list=FALSE, time=1)
train = createDataPartition(AllEncompass, p=.75, list=FALSE, time=1)
train = createDataPartition(data, p=.75, list=FALSE, time=1)
summmary(data)
data
summary(data)
train = filter(data, season = -20132014)
train = filter(data, season == -20132014)
summary(data)
train = filter(data, season %in% c(20082009, 20092010, 20102011, 20112012, 20122013))
test = filter(data, season == 20142015)
train = filter(data, season %in% c(20082009, 20092010, 20102011, 20112012, 20122013, 20132014))
Logit <- glm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff, data=train)
LogitPred <- predict(Logit, test)
LogitPred
Test
test
PredCheck <- data.frame(LogitPred, test)
PredCheck
summary(PredCheck)
PredCheck <- data.frame(LogitPred, test) %>% select(LogitPred, GDiff)
PredCheck
rmse(PredCheck, LogitPred, GDiff)
library(hydroGOF)
install.packages("hydroGOF")
library(hydroGOF)
rmse(PredCheck, LogitPred, GDiff)
LogitPred
GDiff <- test$GDiff
GDiff
rmse(LogitPred, GDiff)
train = filter(data, season %in% c(20082009, 20092010, 20102011, 20112012, 20122013))
test = filter(data, season %in% c(20132014, 20142015)
#GDiff predictors
Logit <- glm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff, data=train)
Logit <- glm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff, data=train)
LogitPred <- predict(Logit, test)
#Prediction Comparison
PredCheck <- data.frame(LogitPred, test) %>% select(LogitPred, GDiff)
GDiff <- test$GDiff
#RMSE
rmse(LogitPred, GDiff)
Pen_Diff, data=train, n.trees=1000)
RForest <- randomForest(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff, data=train, n.trees=1000)
library(randomForest)
RForest <- randomForest(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff, data=train, n.trees=1000)
RForestPred <- predict(RForest, test, n.trees=1000)
rmse(RForestPred, GDiff)
RForest <- randomForest(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff, data=train, n.trees=5000)
RForestPred <- predict(RForest, test, n.trees=5000)
rmse(RForestPred, GDiff)
library(gbm)
Boost <- gbm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc +
Pen_Diff, data=train, ntree=2000, interaction.depth=5)
Boost <- gbm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc +
Pen_Diff, data=train, n.tree=2000, interaction.depth=5)
BoostPred <- predict(Boost, test, ntree=2000)
BoostPred <- predict(Boost, test, n.tree=2000)
rmse(BoostPred, GDiff)
summary(data)
Pen_Diff + PDO + Faceoff_Win_Perc + Save_Perc + Shooting_Perc,  data=train)
Logit <- glm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff + PDO + Faceoff_Win_Perc + Save_Perc + Shooting_Perc,  data=train)
LogitPred <- predict(Logit, test)
rmse(LogitPred, GDiff)
Pen_Diff+PDO+Faceoff_Win_Perc+Save_Perc+Shooting_Perc, data=train, n.trees=5000)
RForestPred <- predict(RForest, test, n.trees=5000)
RForest <- randomForest(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc+
Pen_Diff+PDO+Faceoff_Win_Perc+Save_Perc+Shooting_Perc, data=train, n.trees=5000)
RForestPred <- predict(RForest, test, n.trees=5000)
rmse(RForestPred, GDiff)
Boost <- gbm(GDiff ~ Corsi_60 + Zone_Starts_Per + High_Danger_Scoring + Scoring_Chances_Perc + Shots_For_Perc +
Pen_Diff+PDO+Faceoff_Win_Perc+Save_Perc+Shooting_Perc, data=train, n.tree=2000, interaction.depth=5)
BoostPred <- predict(Boost, test, n.tree=2000)
rmse(BoostPred, GDiff)
